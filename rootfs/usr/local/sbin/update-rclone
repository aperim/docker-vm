#!/usr/bin/env bash
#
# Updates rclone to the latest beta version. If the update is not necessary or fails
# after a number of attempts, the script exits cleanly to avoid cascading service
# failures when rclone is already installed.

# Exponential backoff parameters
BASE=2
ATTEMPT=0
MAX_ATTEMPTS=5

# Function to check if rclone is installed and return version
function check_rclone_installed {
  if ! command -v rclone &> /dev/null; then
    return 1
  else
    rclone --version
    return 0
  fi
}

# Main update loop with exponential backoff
while (( ATTEMPT < MAX_ATTEMPTS )); do
  # Install or update rclone from the install script provided by rclone.org
  curl https://rclone.org/install.sh | sudo bash -s beta
  RC=$?  # Capture the exit code of the install/update command

  # Exit code 3 indicates no update is needed
  if [[ $RC -eq 3 ]]; then
    echo "No update is needed for rclone."
    exit 0
  # Exit code 0 indicates the update was successful
  elif [[ $RC -eq 0 ]]; then
    echo "rclone successfully updated."
    exit 0
  else
    # Exponentially backoff and retry update
    (( ATTEMPT++ ))
    echo "Update failed. Attempt $ATTEMPT/$MAX_ATTEMPTS failed."
    DELAY=$(( BASE**ATTEMPT ))
    echo "Retrying after $DELAY seconds..."
    sleep "$DELAY"
  fi
done

# If there is a working version of rclone, after all attempts fail, exit cleanly to avoid cascading failures
if check_rclone_installed; then
  echo "rclone update failed, but a working version is installed."
  exit 0
else
  echo "rclone update failed and rclone is not installed."
  exit 1
fi
